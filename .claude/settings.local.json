{
  "permissions": {
    "allow": [
      "Bash(powershell -Command \"Get-Command mcp* -ErrorAction SilentlyContinue\")",
      "Bash(powershell -Command \"Import-Module .\\AnimeOrganizer\\AnimeOrganizer.psm1 -Force; Start-AnimeOrganization -SeriesId 452826\")",
      "Bash(powershell -Command \".\\AnimeOrganizer\\Tests\\Logging.Tests.ps1\")",
      "Bash(powershell -Command \".\\AnimeOrganizer\\Tests\\ErrorHandling.Tests.ps1\")",
      "Bash(powershell -Command \".\\AnimeOrganizer\\Tests\\Performance.Tests.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-space-removal.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-versioning.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-comprehensive.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-regex.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-regex-simple.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-final.ps1\")",
      "Bash(Move-Item -Path \"E:\\Media\\File organizer\\test-*.ps1\" -Destination \"E:\\Media\\File organizer\\AnimeOrganizer\\Tests\"\" -Force)",
      "Bash(powershell -Command \"Move-Item -Path ''E:\\Media\\File organizer\\test-*.ps1'' -Destination ''E:\\Media\\File organizer\\AnimeOrganizer\\Tests\\'' -Force\")",
      "Bash(powershell -ExecutionPolicy Bypass -Command \"Import-Module .\\AnimeOrganizer\\AnimeOrganizer.psm1 -Force; Start-AnimeOrganization -SeriesId 452826 -WorkingDirectory ''Z:\\Media\\NSFW\\Haite Kudasai, Takamine-san [tvdb-452826]'' -OperationType RenameOnly -DryRun\")",
      "Bash(powershell -ExecutionPolicy Bypass -File test-preview.ps1)",
      "Bash(powershell -ExecutionPolicy Bypass -File test-execution.ps1)",
      "Bash(Remove-Item test-preview.ps1, test-execution.ps1)",
      "Bash(powershell -ExecutionPolicy Bypass -File test-versioning.ps1)",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-dataflow.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-comprehensive-fix.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -Command \"Import-Module .\\AnimeOrganizer\\AnimeOrganizer.psm1 -Force; Start-AnimeOrganization -SeriesId 452826 -WorkingDirectory ''Z:\\Media\\NSFW\\Haite Kudasai, Takamine-san [tvdb-452826]'' -Interactive:$false\")",
      "Bash(powershell -ExecutionPolicy Bypass -Command \"Import-Module .\\AnimeOrganizer\\AnimeOrganizer.psm1 -Force; Start-AnimeOrganization -SeriesId 452826 -WorkingDirectory ''Z:\\Media\\NSFW\\Haite Kudasai, Takamine-san [tvdb-452826]''\")",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-specials.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -File \"E:\\Media\\File organizer\\test-parsing.ps1\")",
      "Bash(powershell -ExecutionPolicy Bypass -Command \"Import-Module .\\AnimeOrganizer\\Modules\\AnimeOrganizer.FileParser.psm1 -Force; $result = Parse-EpisodeNumber -FileName \"\"World''s End Harem - S01E01 - World of Women.mkv\"\"; Write-Host ''Parse result:''; $result | ConvertTo-Json\")",
      "Bash(powershell -ExecutionPolicy Bypass -Command \"Import-Module .\\AnimeOrganizer\\Modules\\AnimeOrganizer.FileParser.psm1 -Force; $result = Parse-EpisodeNumber -FileName ''World''''s End Harem - S01E01 - World of Women.mkv''; Write-Host ''Parse result:''; $result | ConvertTo-Json\")",
      "Bash(powershell -ExecutionPolicy Bypass -Command \"Import-Module .\\AnimeOrganizer\\Modules\\AnimeOrganizer.FileParser.psm1 -Force; $result = Parse-EpisodeNumber -FileName ''World''''s End Harem - S01E01 - World of Women.mkv''; Write-Host ''Parse result: Season '' $result.SeasonNumber '' Episode '' $result.EpisodeNumber\")",
      "Bash(powershell -ExecutionPolicy Bypass -File debug-parsing.ps1)",
      "Bash(powershell -ExecutionPolicy Bypass -Command \"Import-Module .\\AnimeOrganizer\\AnimeOrganizer.psm1 -Force; $token = Get-TheTVDBToken -ApiKey ''your-api-key''; $episodes = Get-SeriesEpisodes -Token $token -SeriesId 452826; Write-Host ''Total episodes: '' $episodes.Count; $episodes | Select-Object number, seasonNumber, name | Format-Table -AutoSize\")",
      "Bash(claude mcp add:*)",
      "Bash(git lfs:*)",
      "Bash(git push:*)",
      "WebSearch"
    ],
    "deny": [],
    "ask": []
  }
}